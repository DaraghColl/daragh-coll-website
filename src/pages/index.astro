---
import Layout from '../layouts/Layout.astro';
import Landing from '../components/pages/home/landing/landing.astro';
import { getCollection } from 'astro:content';
import Project from '../components/pages/home/project.astro';
import WorkExperience from '../components/pages/home/work-experience.astro';

const projects = await getCollection('projects');
const workExperience = await getCollection('workExperience');
---

<Layout title="Welcome to Astro.">
	<main>
		<Landing />
		<section id="section__projects" class="py-8">
			<div class="flex items-center justify-center gap-2">
				<div class="flex flex-col">
					<div class="self-center rounded bg-slate-900 p-2">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="white"
							class="section-heading-icon h-6 w-6"
						>
							<path
								class="section-heading-icon-path"
								stroke-linecap="round"
								stroke-linejoin="round"
								d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125"
							></path>
						</svg>
					</div>
					<h4 class="text-center text-3xl font-semibold tracking-tight text-gray-900">Projects</h4>
				</div>
			</div>
			<div class="container-sm grid grid-cols-1 gap-10">
				{
					projects.map(({ data }) => {
						return (
							<Project
								title={data.title}
								description={data.description}
								image={data.image}
								tech={data.tech}
							/>
						);
					})
				}
			</div>
		</section>

		<section id="section__experience" class="py-8">
			<div class="flex items-center justify-center gap-2">
				<div class="flex flex-col">
					<div class="self-center rounded bg-slate-900 p-2">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="white"
							class="section-heading-icon h-6 w-6"
						>
							<path
								class="section-heading-icon-path"
								stroke-linecap="round"
								stroke-linejoin="round"
								d="M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 00.75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 00-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0112 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 01-.673-.38m0 0A2.18 2.18 0 013 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 013.413-.387m7.5 0V5.25A2.25 2.25 0 0013.5 3h-3a2.25 2.25 0 00-2.25 2.25v.894m7.5 0a48.667 48.667 0 00-7.5 0M12 12.75h.008v.008H12v-.008z"
							></path>
						</svg>
					</div>
					<h4 class="text-center text-3xl font-semibold tracking-tight text-gray-900">
						Experience
					</h4>
				</div>
			</div>
			<div class="container-sm grid grid-cols-1 gap-10">
				{
					workExperience.map(({ data }) => {
						return (
							<WorkExperience
								title={data.title}
								job={data.job}
								description={data.description}
								date={data.date}
								tech={data.tech}
							/>
						);
					})
				}
			</div>
		</section>
	</main>
</Layout>

<script>
	import { inView, animate } from 'motion';

	inView('[data-animate="fade-in"]', ({ target }) => {
		const delay = target.getAttribute('data-animate-delay');
		animate(
			target,
			{
				opacity: [0, 1],
				transform: ['translateY(1rem)', 'translateY(0)']
			},
			{ delay: Number(delay), duration: 0.5, easing: ['ease-in'] }
		);
	});

	inView('[data-animate="lift"]', ({ target }) => {
		const delay = target.getAttribute('data-animate-delay');
		animate(
			target,
			{
				transform: ['translateY(3rem)', 'translateY(0)']
			},
			{ duration: 0.5, easing: ['ease-in'] }
		);
	});

	inView('.section-heading-icon', ({ target }) => {
		setTimeout(() => {
			target.classList.add('icon-path-animation');
		}, 500);
	});
</script>

<style>
	.section-heading-icon {
		stroke-dasharray: 450;
		stroke-dashoffset: 450;
	}

	.icon-path-animation {
		animation: draw 5s linear forwards;
	}

	@keyframes draw {
		to {
			stroke-dashoffset: 0;
		}
	}
</style>
